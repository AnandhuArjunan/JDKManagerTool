plugins {
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.runtime' version '1.12.5'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	// https://mvnrepository.com/artifact/com.airhacks/afterburner.fx
// https://mvnrepository.com/artifact/com.dlsc.afterburner/afterburner.fx
implementation group: 'com.dlsc.afterburner', name: 'afterburner.fx', version: '2.2.0'
    implementation group: 'com.h2database', name: 'h2', version: '2.1.214'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.4.33.Final'
    implementation group: 'javax.xml.bind', name: 'jaxb-api'
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime'
    implementation group: 'io.github.palexdev', name: 'materialfx', version: '11.13.5'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation 'org.javatuples:javatuples:1.2'
    implementation group: 'org.apache.commons', name: 'commons-exec', version: '1.3'
implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
// https://mvnrepository.com/artifact/org.projectlombok/lombok


}

repositories {
    mavenCentral()
}

javafx {
    version = '14'
    modules = ['javafx.controls', 'javafx.fxml']
}

version = '0.0.1'


application {
    mainClass = "com.anandhuarjunan.workspacetool.Launcher"
    applicationName = 'WorkspaceManagerTool'
}
runtime {

    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        noConsole = true
    }

    jpackage {
       def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/hellofx.$imgType"]
        installerOptions += ['--resource-dir', "src/main/resources"]
        installerOptions += ['--vendor', 'Anandhu Arjunan']

        if(currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
    }
}
run {
         jvmArgs("-Dh2.system.home=data","-DRun")
}
tasks.jpackageImage.doLast {

     copy {
            from "${rootProject.projectDir}/data"
            into "build/jpackage/$project.name/app"
        }

    copy {
            from "${rootProject.projectDir}/native"
            into "build/jpackage/$project.name/app"
        }
}
